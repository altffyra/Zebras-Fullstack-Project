@use "variables";

header {
  @include variables.flexContainer(row);
  justify-content: space-between;
  align-items: center;
  position: fixed;
  top: 0;
  left: 0;
  gap: 2em;
  padding-right: 2em;
  width: 100%;
  min-height: 10vh;
  background-color: variables.$primaryBackground;
  z-index: 999999;
  box-shadow: 0px 9px 10px rgba(0, 0, 0, 0.13);
  color: variables.$fontLight;
  transition: all 400ms;

  
  .logo-container {
    @include variables.flexContainer(row);
    .nav-headline {
      font-size: 1em;
      margin: 0 0.5em;
      margin-left: auto;
      color: variables.$fontDark;
    }
    .logo {
      max-width: 10vw;
      max-height: 5vh;
    }
  }
  
  .cart-icon {
    position: relative;
    cursor: pointer;
    img {
      width: 1.5em;
      height: 1.5em;
    }
    .cart-amount {

      position: absolute;
      bottom: -1em;
      left: -0.5em;
      border-radius: 50%;
      padding: 0.5em;
      background-color: variables.$dropdownRed;
      transition: all 400ms;
      p {
        font-size: 0.6em;
        pointer-events: none;
      }
      &:hover {
        background-color: variables.$lockColor;
      }
    }
  }
  .menu-btn {
    display: block;
    border: none;
    background-color: transparent;
    z-index: 9999;
    height: 20px;
    width: 30px;
    margin-left: 2em;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    span {
      width: 30px;
      height: 4px;
      background: variables.$fontDark;
      transition: 300ms ease-in-out;
      transform-origin: top left;
    }
    .menu-btn--mid {
      opacity: 0;
    }
    .menu-btn--top {
      transform: rotateZ(45deg);
      background: variables.$fontLight;
    }
    .menu-btn--bottom {
      transform: rotateZ(-45deg);
      background: variables.$fontLight;
    }
  }
  .nav {
    background: variables.$dropdownRed;
    inset: 0 100% 0 0;
    @include variables.flexContainer();
    justify-content: center;
    position: fixed;
    width: 100%;
    z-index: 100;
    transform: translateY(-100%);
    transition: 300ms ease-in-out;

    .link-container {
      @include variables.flexContainer();
      justify-content: flex-end;
      align-items: center;
      list-style: none;
      gap: 3em;
      padding: 0;

      .link {
        font-size: 1.2rem;
        font-family: variables.$headerFont;
        position: relative;
        color: variables.$fontLight;
        text-decoration: none;
        cursor: pointer;
        font-size: 1em;
      }
      .divider {
        display: block;
        width: 80%;
        height: 0.4em;
        background-color: variables.$fontLight;
        opacity: 80%;
      }
    }
  }
  .open {
    transform: translateY(0);
  }
}

.nav-top {
  background-color: transparent !important;
  box-shadow: none;

  .menu-btn {
    span {
      background-color: variables.$fontLight;
    }
  }
  .nav {
    .link-container {
      .link {    
        color: variables.$fontLight;
      }
      
    }
  }

  .logo-container {
    .nav-headline {
      display: none;
    }
    .logo {
      display: none;
    }
  }
}

@media screen and (min-width: 786px) {
  header {
    .logo-container {
      order: 2;
      gap: 1em;
    }

    .cart-icon {
      order: 1;
    }
    .menu-btn {
      display: none;
    }
    .nav {
      position: relative;
      background: transparent;
      inset: 0;
      transform: translateY(0);

      .link-container {
        flex-direction: row;
        justify-content: flex-start;
        margin-left: 1em;

        .link {
          color: variables.$fontDark;
          &:hover::after {
            opacity: 1;
          }
          &::after {
            content: "";
            position: absolute;
            bottom: -0.4em;
            left: 0px;
            width: 100%;
            height: 8px;
            opacity: 0;
            background: variables.$fontDark;
            transition: all 300ms ease-in-out;
          }
        }
        .divider {
          display: none;
        }
      }
    }
  }

  .nav-top {
    min-height: 5vh;
    .nav {
      .link-container {
        .link {
          &::after {
            background: variables.$fontLight;
          }        
        }
      }
    }
  }
}
